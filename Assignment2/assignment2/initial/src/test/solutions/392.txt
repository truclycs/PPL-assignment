Program([FuncDecl(Id(convertBinarytoOctal),[VarDecl(binaryNumber,IntType)],IntType,Block([VarDecl(octalNumber,IntType),VarDecl(decimalNumber,IntType),VarDecl(i,IntType),BinaryOp(=,Id(octalNumber),BinaryOp(=,Id(decimalNumber),BinaryOp(=,Id(i),IntLiteral(0)))),Dowhile([Block([BinaryOp(=,Id(decimalNumber),BinaryOp(+,Id(decimalNumber),BinaryOp(*,BinaryOp(%,Id(binaryNumber),IntLiteral(10)),CallExpr(Id(pow),[IntLiteral(2),Id(i)])))),BinaryOp(=,Id(i),BinaryOp(+,Id(i),IntLiteral(1))),BinaryOp(=,Id(binaryNumber),BinaryOp(/,Id(binaryNumber),IntLiteral(10)))])],BinaryOp(!=,Id(binaryNumber),IntLiteral(0))),BinaryOp(=,Id(i),IntLiteral(1)),Dowhile([Block([BinaryOp(=,Id(octalNumber),BinaryOp(+,Id(octalNumber),BinaryOp(*,BinaryOp(%,Id(decimalNumber),IntLiteral(8)),Id(i)))),BinaryOp(=,Id(decimalNumber),BinaryOp(/,Id(decimalNumber),IntLiteral(8))),BinaryOp(=,Id(i),BinaryOp(*,Id(i),IntLiteral(10)))])],BinaryOp(!=,Id(decimalNumber),IntLiteral(0))),Return(Id(octalNumber))]))])